{"id":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","dependencies":[{"name":"C:\\Users\\kiran\\Desktop\\kiransuren.me\\package.json","includedInParent":true,"mtime":1596516263046},{"name":"C:\\Users\\kiran\\Desktop\\kiransuren.me\\node_modules\\tsparticles\\package.json","includedInParent":true,"mtime":1596516177586},{"name":"../../../../Utils","loc":{"line":4,"column":24},"parent":"C:\\Users\\kiran\\Desktop\\kiransuren.me\\node_modules\\tsparticles\\dist\\Core\\Particle\\Interactions\\Particles\\Infecter.js","resolved":"C:\\Users\\kiran\\Desktop\\kiransuren.me\\node_modules\\tsparticles\\dist\\Utils\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Infecter = void 0;\nconst Utils_1 = require(\"../../../../Utils\");\nclass Infecter {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        return this.container.options.infection.enable;\n    }\n    reset() {\n    }\n    interact(p1, delta) {\n        var _a, _b;\n        const infecter1 = p1.infecter;\n        infecter1.updateInfection(delta.value);\n        if (infecter1.infectionStage === undefined) {\n            return;\n        }\n        const container = this.container;\n        const options = container.options;\n        const infectionOptions = options.infection;\n        if (!infectionOptions.enable || infectionOptions.stages.length < 1) {\n            return;\n        }\n        const infectionStage1 = infectionOptions.stages[infecter1.infectionStage];\n        const pxRatio = container.retina.pixelRatio;\n        const radius = p1.size.value * 2 + infectionStage1.radius * pxRatio;\n        const pos = p1.getPosition();\n        const infectedStage1 = (_a = infectionStage1.infectedStage) !== null && _a !== void 0 ? _a : infecter1.infectionStage;\n        const query = container.particles.quadTree\n            .query(new Utils_1.Circle(pos.x, pos.y, radius))\n            .filter((p) => p.infecter.infectionStage === undefined || p.infecter.infectionStage !== infecter1.infectionStage);\n        const infections = infectionStage1.rate;\n        const neighbors = query.length;\n        for (const p2 of query) {\n            const infecter2 = p2.infecter;\n            if (Math.random() < infections / neighbors) {\n                if (infecter2.infectionStage === undefined) {\n                    infecter2.startInfection(infectedStage1);\n                }\n                else if (infecter2.infectionStage < infecter1.infectionStage) {\n                    infecter2.updateInfectionStage(infectedStage1);\n                }\n                else if (infecter2.infectionStage > infecter1.infectionStage) {\n                    const infectionStage2 = infectionOptions.stages[infecter2.infectionStage];\n                    const infectedStage2 = (_b = infectionStage2 === null || infectionStage2 === void 0 ? void 0 : infectionStage2.infectedStage) !== null && _b !== void 0 ? _b : infecter2.infectionStage;\n                    infecter1.updateInfectionStage(infectedStage2);\n                }\n            }\n        }\n    }\n}\nexports.Infecter = Infecter;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}}],"sources":{"node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Infecter.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Infecter = void 0;\nconst Utils_1 = require(\"../../../../Utils\");\nclass Infecter {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        return this.container.options.infection.enable;\n    }\n    reset() {\n    }\n    interact(p1, delta) {\n        var _a, _b;\n        const infecter1 = p1.infecter;\n        infecter1.updateInfection(delta.value);\n        if (infecter1.infectionStage === undefined) {\n            return;\n        }\n        const container = this.container;\n        const options = container.options;\n        const infectionOptions = options.infection;\n        if (!infectionOptions.enable || infectionOptions.stages.length < 1) {\n            return;\n        }\n        const infectionStage1 = infectionOptions.stages[infecter1.infectionStage];\n        const pxRatio = container.retina.pixelRatio;\n        const radius = p1.size.value * 2 + infectionStage1.radius * pxRatio;\n        const pos = p1.getPosition();\n        const infectedStage1 = (_a = infectionStage1.infectedStage) !== null && _a !== void 0 ? _a : infecter1.infectionStage;\n        const query = container.particles.quadTree\n            .query(new Utils_1.Circle(pos.x, pos.y, radius))\n            .filter((p) => p.infecter.infectionStage === undefined || p.infecter.infectionStage !== infecter1.infectionStage);\n        const infections = infectionStage1.rate;\n        const neighbors = query.length;\n        for (const p2 of query) {\n            const infecter2 = p2.infecter;\n            if (Math.random() < infections / neighbors) {\n                if (infecter2.infectionStage === undefined) {\n                    infecter2.startInfection(infectedStage1);\n                }\n                else if (infecter2.infectionStage < infecter1.infectionStage) {\n                    infecter2.updateInfectionStage(infectedStage1);\n                }\n                else if (infecter2.infectionStage > infecter1.infectionStage) {\n                    const infectionStage2 = infectionOptions.stages[infecter2.infectionStage];\n                    const infectedStage2 = (_b = infectionStage2 === null || infectionStage2 === void 0 ? void 0 : infectionStage2.infectedStage) !== null && _b !== void 0 ? _b : infecter2.infectionStage;\n                    infecter1.updateInfectionStage(infectedStage2);\n                }\n            }\n        }\n    }\n}\nexports.Infecter = Infecter;\n"},"lineCount":56}},"error":null,"hash":"7c66dadec2cac49cdaeacdff52289d01","cacheData":{"env":{}}}