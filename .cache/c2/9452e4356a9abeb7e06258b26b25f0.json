{"id":"node_modules/tsparticles/dist/Core/Particle.js","dependencies":[{"name":"C:\\Users\\kiran\\Desktop\\classicsite\\package.json","includedInParent":true,"mtime":1596516263046},{"name":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\package.json","includedInParent":true,"mtime":1596516177586},{"name":"./Particle/Updater","loc":{"line":4,"column":26},"parent":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Core\\Particle.js","resolved":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Core\\Particle\\Updater.js"},{"name":"../Options/Classes/Particles/Particles","loc":{"line":5,"column":28},"parent":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Core\\Particle.js","resolved":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Options\\Classes\\Particles\\Particles.js"},{"name":"../Options/Classes/Particles/Shape/Shape","loc":{"line":6,"column":24},"parent":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Core\\Particle.js","resolved":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Options\\Classes\\Particles\\Shape\\Shape.js"},{"name":"../Enums","loc":{"line":7,"column":24},"parent":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Core\\Particle.js","resolved":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Enums\\index.js"},{"name":"../Utils","loc":{"line":8,"column":24},"parent":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Core\\Particle.js","resolved":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Utils\\index.js"},{"name":"./Particle/Infecter","loc":{"line":9,"column":27},"parent":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Core\\Particle.js","resolved":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Core\\Particle\\Infecter.js"},{"name":"./Particle/Mover","loc":{"line":10,"column":24},"parent":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Core\\Particle.js","resolved":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Core\\Particle\\Mover.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particle = void 0;\nconst Updater_1 = require(\"./Particle/Updater\");\nconst Particles_1 = require(\"../Options/Classes/Particles/Particles\");\nconst Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\nconst Enums_1 = require(\"../Enums\");\nconst Utils_1 = require(\"../Utils\");\nconst Infecter_1 = require(\"./Particle/Infecter\");\nconst Mover_1 = require(\"./Particle/Mover\");\nclass Particle {\n    constructor(container, position, overrideOptions) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        this.container = container;\n        this.fill = true;\n        this.close = true;\n        this.links = [];\n        this.lastNoiseTime = 0;\n        this.destroyed = false;\n        const options = container.options;\n        const particlesOptions = new Particles_1.Particles();\n        particlesOptions.load(options.particles);\n        const shapeType = particlesOptions.shape.type;\n        this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape =\n                    overrideShapeType instanceof Array ? Utils_1.Utils.itemFromArray(overrideShapeType) : overrideShapeType;\n            }\n            const shapeOptions = new Shape_1.Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                const shapeData = shapeOptions.options[this.shape];\n                if (shapeData) {\n                    this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n                }\n            }\n        }\n        else {\n            const shapeData = particlesOptions.shape.options[this.shape];\n            if (shapeData) {\n                this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n            }\n        }\n        if (overrideOptions !== undefined) {\n            particlesOptions.load(overrideOptions);\n        }\n        if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n            particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n        }\n        this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n        this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n        this.particlesOptions = particlesOptions;\n        const noiseDelay = this.particlesOptions.move.noise.delay;\n        this.noiseDelay =\n            (noiseDelay.random.enable\n                ? Utils_1.Utils.randomInRange(noiseDelay.random.minimumValue, noiseDelay.value)\n                : noiseDelay.value) * 1000;\n        container.retina.initParticle(this);\n        const color = this.particlesOptions.color;\n        const sizeValue = (_g = this.sizeValue) !== null && _g !== void 0 ? _g : container.retina.sizeValue;\n        const randomSize = typeof this.particlesOptions.size.random === \"boolean\"\n            ? this.particlesOptions.size.random\n            : this.particlesOptions.size.random.enable;\n        this.size = {\n            value: randomSize && this.randomMinimumSize !== undefined\n                ? Utils_1.Utils.randomInRange(this.randomMinimumSize, sizeValue)\n                : sizeValue,\n        };\n        this.direction = this.particlesOptions.move.direction;\n        this.bubble = {\n            inRange: false,\n        };\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = {\n            horizontal: this.initialVelocity.horizontal,\n            vertical: this.initialVelocity.vertical,\n        };\n        const rotateOptions = this.particlesOptions.rotate;\n        const degAngle = rotateOptions.random ? Math.random() * 360 : rotateOptions.value;\n        this.angle = (degAngle * Math.PI) / 180;\n        this.pathAngle = Math.atan2(this.initialVelocity.vertical, this.initialVelocity.horizontal);\n        this.rotateDirection = rotateOptions.direction;\n        if (this.rotateDirection === Enums_1.RotateDirection.random) {\n            const index = Math.floor(Math.random() * 2);\n            this.rotateDirection = index > 0 ? Enums_1.RotateDirection.counterClockwise : Enums_1.RotateDirection.clockwise;\n        }\n        const sizeAnimation = this.particlesOptions.size.animation;\n        if (sizeAnimation.enable) {\n            switch (sizeAnimation.startValue) {\n                case Enums_1.StartValueType.min:\n                    if (!randomSize) {\n                        const pxRatio = container.retina.pixelRatio;\n                        this.size.value = sizeAnimation.minimumValue * pxRatio;\n                    }\n                    break;\n            }\n            this.size.status = Enums_1.SizeAnimationStatus.increasing;\n            this.size.velocity = ((_h = this.sizeAnimationSpeed) !== null && _h !== void 0 ? _h : container.retina.sizeAnimationSpeed) / 100;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= Math.random();\n            }\n        }\n        this.color = Utils_1.ColorUtils.colorToHsl(color);\n        const colorAnimation = this.particlesOptions.color.animation;\n        if (colorAnimation.enable) {\n            this.colorVelocity = colorAnimation.speed / 100;\n            if (!colorAnimation.sync) {\n                this.colorVelocity = this.colorVelocity * Math.random();\n            }\n        }\n        else {\n            this.colorVelocity = 0;\n        }\n        if (colorAnimation.enable && !colorAnimation.sync && this.color) {\n            this.color.h = Math.random() * 360;\n        }\n        this.position = this.calcPosition(this.container, position);\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        if (this.particlesOptions.collisions.enable && !this.checkOverlap(position)) {\n            throw new Error();\n        }\n        const opacityOptions = this.particlesOptions.opacity;\n        const randomOpacity = opacityOptions.random;\n        const opacityValue = opacityOptions.value;\n        this.opacity = {\n            value: randomOpacity.enable ? Utils_1.Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue,\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            this.opacity.status = Enums_1.OpacityAnimationStatus.increasing;\n            this.opacity.velocity = opacityAnimation.speed / 100;\n            if (!opacityAnimation.sync) {\n                this.opacity.velocity *= Math.random();\n            }\n        }\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = Utils_1.Plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        const imageShape = this.loadImageShape(container, drawer);\n        if (imageShape) {\n            this.image = imageShape.image;\n            this.fill = imageShape.fill;\n            this.close = imageShape.close;\n        }\n        this.stroke =\n            this.particlesOptions.stroke instanceof Array\n                ? Utils_1.Utils.itemFromArray(this.particlesOptions.stroke)\n                : this.particlesOptions.stroke;\n        this.strokeWidth = this.stroke.width * container.retina.pixelRatio;\n        this.strokeColor = Utils_1.ColorUtils.colorToHsl(this.stroke.color);\n        if (typeof this.stroke.color !== \"string\") {\n            const strokeColorAnimation = (_j = this.stroke.color) === null || _j === void 0 ? void 0 : _j.animation;\n            if (strokeColorAnimation && this.strokeColor) {\n                if (strokeColorAnimation.enable) {\n                    this.strokeColorVelocity = colorAnimation.speed / 100;\n                    if (!strokeColorAnimation.sync) {\n                        this.strokeColorVelocity = this.strokeColorVelocity * Math.random();\n                    }\n                }\n                else {\n                    this.strokeColorVelocity = 0;\n                }\n                if (strokeColorAnimation.enable && !strokeColorAnimation.sync && this.color) {\n                    this.strokeColor.h = Math.random() * 360;\n                }\n            }\n        }\n        this.shadowColor = Utils_1.ColorUtils.colorToRgb(this.particlesOptions.shadow.color);\n        this.updater = new Updater_1.Updater(container, this);\n        this.infecter = new Infecter_1.Infecter(container, this);\n        this.mover = new Mover_1.Mover(container, this);\n    }\n    move(delta) {\n        this.mover.move(delta);\n    }\n    update(delta) {\n        this.updater.update(delta);\n    }\n    draw(delta) {\n        this.container.canvas.drawParticle(this, delta);\n    }\n    isOverlapping() {\n        const container = this.container;\n        let collisionFound = false;\n        const pos1 = this.getPosition();\n        for (const p2 of container.particles.array.filter((t) => t != this)) {\n            const pos2 = p2.getPosition();\n            const dist = Utils_1.Utils.getDistance(pos1, pos2);\n            if (dist <= this.size.value + p2.size.value) {\n                collisionFound = true;\n                break;\n            }\n        }\n        return collisionFound;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n        };\n    }\n    getFillColor() {\n        var _a;\n        return (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.color;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.strokeColor) !== null && _b !== void 0 ? _b : this.color;\n    }\n    destroy() {\n        this.destroyed = true;\n    }\n    checkOverlap(position, iterations = 0) {\n        const container = this.container;\n        if (!container.particles.count) {\n            return true;\n        }\n        if (iterations >= container.particles.count) {\n            return false;\n        }\n        const overlapping = this.isOverlapping();\n        if (overlapping) {\n            this.position.x = position ? position.x : Math.random() * container.canvas.size.width;\n            this.position.y = position ? position.y : Math.random() * container.canvas.size.height;\n            return this.checkOverlap(undefined, iterations + 1);\n        }\n        return true;\n    }\n    calcPosition(container, position) {\n        var _a, _b;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Utils_1.Utils.deepExtend({}, pluginPos);\n            }\n        }\n        const pos = {\n            x: (_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * container.canvas.size.width,\n            y: (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * container.canvas.size.height,\n        };\n        const outMode = this.particlesOptions.move.outMode;\n        if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceHorizontal)) {\n            if (pos.x > container.canvas.size.width - this.size.value * 2) {\n                pos.x -= this.size.value;\n            }\n            else if (pos.x < this.size.value * 2) {\n                pos.x += this.size.value;\n            }\n        }\n        if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceVertical)) {\n            if (pos.y > container.canvas.size.height - this.size.value * 2) {\n                pos.y -= this.size.value;\n            }\n            else if (pos.y < this.size.value * 2) {\n                pos.y += this.size.value;\n            }\n        }\n        return pos;\n    }\n    calculateVelocity() {\n        const baseVelocity = Utils_1.Utils.getParticleBaseVelocity(this);\n        const res = {\n            horizontal: 0,\n            vertical: 0,\n        };\n        const moveOptions = this.particlesOptions.move;\n        let rad;\n        let radOffset = Math.PI / 4;\n        if (typeof moveOptions.angle === \"number\") {\n            rad = (Math.PI / 180) * moveOptions.angle;\n        }\n        else {\n            rad = (Math.PI / 180) * moveOptions.angle.value;\n            radOffset = (Math.PI / 180) * moveOptions.angle.offset;\n        }\n        const range = {\n            left: Math.sin(radOffset + rad / 2) - Math.sin(radOffset - rad / 2),\n            right: Math.cos(radOffset + rad / 2) - Math.cos(radOffset - rad / 2),\n        };\n        if (moveOptions.straight) {\n            res.horizontal = baseVelocity.x;\n            res.vertical = baseVelocity.y;\n            if (moveOptions.random) {\n                res.horizontal += Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n                res.vertical += Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n            }\n        }\n        else {\n            res.horizontal = baseVelocity.x + Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n            res.vertical = baseVelocity.y + Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n        }\n        return res;\n    }\n    loadImageShape(container, drawer) {\n        var _a, _b, _c, _d;\n        if (!(this.shape === Enums_1.ShapeType.image || this.shape === Enums_1.ShapeType.images)) {\n            return;\n        }\n        const shape = this.particlesOptions.shape;\n        const imageDrawer = drawer;\n        const imagesOptions = shape.options[this.shape];\n        const images = imageDrawer.getImages(container).images;\n        const image = Utils_1.Utils.itemFromArray(images);\n        const optionsImage = (imagesOptions instanceof Array\n            ? imagesOptions.find((t) => t.src === image.source)\n            : imagesOptions);\n        const color = this.getFillColor();\n        let imageRes;\n        if ((image === null || image === void 0 ? void 0 : image.svgData) !== undefined && optionsImage.replaceColor && color) {\n            const svgColoredData = Utils_1.ColorUtils.replaceColorSvg(image, color, this.opacity.value);\n            const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" });\n            const domUrl = window.URL || window.webkitURL || window;\n            const url = domUrl.createObjectURL(svg);\n            const img = new Image();\n            imageRes = {\n                data: image,\n                loaded: false,\n                ratio: optionsImage.width / optionsImage.height,\n                replaceColor: (_a = optionsImage.replaceColor) !== null && _a !== void 0 ? _a : optionsImage.replace_color,\n                source: optionsImage.src,\n            };\n            img.addEventListener(\"load\", () => {\n                if (this.image) {\n                    this.image.loaded = true;\n                    image.element = img;\n                }\n                domUrl.revokeObjectURL(url);\n            });\n            img.addEventListener(\"error\", () => {\n                domUrl.revokeObjectURL(url);\n                Utils_1.Utils.loadImage(optionsImage.src).then((img2) => {\n                    if (this.image) {\n                        image.element = img2.element;\n                        this.image.loaded = true;\n                    }\n                });\n            });\n            img.src = url;\n        }\n        else {\n            imageRes = {\n                data: image,\n                loaded: true,\n                ratio: optionsImage.width / optionsImage.height,\n                replaceColor: (_b = optionsImage.replaceColor) !== null && _b !== void 0 ? _b : optionsImage.replace_color,\n                source: optionsImage.src,\n            };\n        }\n        if (!imageRes.ratio) {\n            imageRes.ratio = 1;\n        }\n        const fill = (_c = optionsImage.fill) !== null && _c !== void 0 ? _c : this.fill;\n        const close = (_d = optionsImage.close) !== null && _d !== void 0 ? _d : this.close;\n        return {\n            image: imageRes,\n            fill,\n            close,\n        };\n    }\n}\nexports.Particle = Particle;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/tsparticles/dist/Core/Particle.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}}],"sources":{"node_modules/tsparticles/dist/Core/Particle.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particle = void 0;\nconst Updater_1 = require(\"./Particle/Updater\");\nconst Particles_1 = require(\"../Options/Classes/Particles/Particles\");\nconst Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\nconst Enums_1 = require(\"../Enums\");\nconst Utils_1 = require(\"../Utils\");\nconst Infecter_1 = require(\"./Particle/Infecter\");\nconst Mover_1 = require(\"./Particle/Mover\");\nclass Particle {\n    constructor(container, position, overrideOptions) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        this.container = container;\n        this.fill = true;\n        this.close = true;\n        this.links = [];\n        this.lastNoiseTime = 0;\n        this.destroyed = false;\n        const options = container.options;\n        const particlesOptions = new Particles_1.Particles();\n        particlesOptions.load(options.particles);\n        const shapeType = particlesOptions.shape.type;\n        this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape =\n                    overrideShapeType instanceof Array ? Utils_1.Utils.itemFromArray(overrideShapeType) : overrideShapeType;\n            }\n            const shapeOptions = new Shape_1.Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                const shapeData = shapeOptions.options[this.shape];\n                if (shapeData) {\n                    this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n                }\n            }\n        }\n        else {\n            const shapeData = particlesOptions.shape.options[this.shape];\n            if (shapeData) {\n                this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n            }\n        }\n        if (overrideOptions !== undefined) {\n            particlesOptions.load(overrideOptions);\n        }\n        if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n            particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n        }\n        this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n        this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n        this.particlesOptions = particlesOptions;\n        const noiseDelay = this.particlesOptions.move.noise.delay;\n        this.noiseDelay =\n            (noiseDelay.random.enable\n                ? Utils_1.Utils.randomInRange(noiseDelay.random.minimumValue, noiseDelay.value)\n                : noiseDelay.value) * 1000;\n        container.retina.initParticle(this);\n        const color = this.particlesOptions.color;\n        const sizeValue = (_g = this.sizeValue) !== null && _g !== void 0 ? _g : container.retina.sizeValue;\n        const randomSize = typeof this.particlesOptions.size.random === \"boolean\"\n            ? this.particlesOptions.size.random\n            : this.particlesOptions.size.random.enable;\n        this.size = {\n            value: randomSize && this.randomMinimumSize !== undefined\n                ? Utils_1.Utils.randomInRange(this.randomMinimumSize, sizeValue)\n                : sizeValue,\n        };\n        this.direction = this.particlesOptions.move.direction;\n        this.bubble = {\n            inRange: false,\n        };\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = {\n            horizontal: this.initialVelocity.horizontal,\n            vertical: this.initialVelocity.vertical,\n        };\n        const rotateOptions = this.particlesOptions.rotate;\n        const degAngle = rotateOptions.random ? Math.random() * 360 : rotateOptions.value;\n        this.angle = (degAngle * Math.PI) / 180;\n        this.pathAngle = Math.atan2(this.initialVelocity.vertical, this.initialVelocity.horizontal);\n        this.rotateDirection = rotateOptions.direction;\n        if (this.rotateDirection === Enums_1.RotateDirection.random) {\n            const index = Math.floor(Math.random() * 2);\n            this.rotateDirection = index > 0 ? Enums_1.RotateDirection.counterClockwise : Enums_1.RotateDirection.clockwise;\n        }\n        const sizeAnimation = this.particlesOptions.size.animation;\n        if (sizeAnimation.enable) {\n            switch (sizeAnimation.startValue) {\n                case Enums_1.StartValueType.min:\n                    if (!randomSize) {\n                        const pxRatio = container.retina.pixelRatio;\n                        this.size.value = sizeAnimation.minimumValue * pxRatio;\n                    }\n                    break;\n            }\n            this.size.status = Enums_1.SizeAnimationStatus.increasing;\n            this.size.velocity = ((_h = this.sizeAnimationSpeed) !== null && _h !== void 0 ? _h : container.retina.sizeAnimationSpeed) / 100;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= Math.random();\n            }\n        }\n        this.color = Utils_1.ColorUtils.colorToHsl(color);\n        const colorAnimation = this.particlesOptions.color.animation;\n        if (colorAnimation.enable) {\n            this.colorVelocity = colorAnimation.speed / 100;\n            if (!colorAnimation.sync) {\n                this.colorVelocity = this.colorVelocity * Math.random();\n            }\n        }\n        else {\n            this.colorVelocity = 0;\n        }\n        if (colorAnimation.enable && !colorAnimation.sync && this.color) {\n            this.color.h = Math.random() * 360;\n        }\n        this.position = this.calcPosition(this.container, position);\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        if (this.particlesOptions.collisions.enable && !this.checkOverlap(position)) {\n            throw new Error();\n        }\n        const opacityOptions = this.particlesOptions.opacity;\n        const randomOpacity = opacityOptions.random;\n        const opacityValue = opacityOptions.value;\n        this.opacity = {\n            value: randomOpacity.enable ? Utils_1.Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue,\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            this.opacity.status = Enums_1.OpacityAnimationStatus.increasing;\n            this.opacity.velocity = opacityAnimation.speed / 100;\n            if (!opacityAnimation.sync) {\n                this.opacity.velocity *= Math.random();\n            }\n        }\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = Utils_1.Plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        const imageShape = this.loadImageShape(container, drawer);\n        if (imageShape) {\n            this.image = imageShape.image;\n            this.fill = imageShape.fill;\n            this.close = imageShape.close;\n        }\n        this.stroke =\n            this.particlesOptions.stroke instanceof Array\n                ? Utils_1.Utils.itemFromArray(this.particlesOptions.stroke)\n                : this.particlesOptions.stroke;\n        this.strokeWidth = this.stroke.width * container.retina.pixelRatio;\n        this.strokeColor = Utils_1.ColorUtils.colorToHsl(this.stroke.color);\n        if (typeof this.stroke.color !== \"string\") {\n            const strokeColorAnimation = (_j = this.stroke.color) === null || _j === void 0 ? void 0 : _j.animation;\n            if (strokeColorAnimation && this.strokeColor) {\n                if (strokeColorAnimation.enable) {\n                    this.strokeColorVelocity = colorAnimation.speed / 100;\n                    if (!strokeColorAnimation.sync) {\n                        this.strokeColorVelocity = this.strokeColorVelocity * Math.random();\n                    }\n                }\n                else {\n                    this.strokeColorVelocity = 0;\n                }\n                if (strokeColorAnimation.enable && !strokeColorAnimation.sync && this.color) {\n                    this.strokeColor.h = Math.random() * 360;\n                }\n            }\n        }\n        this.shadowColor = Utils_1.ColorUtils.colorToRgb(this.particlesOptions.shadow.color);\n        this.updater = new Updater_1.Updater(container, this);\n        this.infecter = new Infecter_1.Infecter(container, this);\n        this.mover = new Mover_1.Mover(container, this);\n    }\n    move(delta) {\n        this.mover.move(delta);\n    }\n    update(delta) {\n        this.updater.update(delta);\n    }\n    draw(delta) {\n        this.container.canvas.drawParticle(this, delta);\n    }\n    isOverlapping() {\n        const container = this.container;\n        let collisionFound = false;\n        const pos1 = this.getPosition();\n        for (const p2 of container.particles.array.filter((t) => t != this)) {\n            const pos2 = p2.getPosition();\n            const dist = Utils_1.Utils.getDistance(pos1, pos2);\n            if (dist <= this.size.value + p2.size.value) {\n                collisionFound = true;\n                break;\n            }\n        }\n        return collisionFound;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n        };\n    }\n    getFillColor() {\n        var _a;\n        return (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.color;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.strokeColor) !== null && _b !== void 0 ? _b : this.color;\n    }\n    destroy() {\n        this.destroyed = true;\n    }\n    checkOverlap(position, iterations = 0) {\n        const container = this.container;\n        if (!container.particles.count) {\n            return true;\n        }\n        if (iterations >= container.particles.count) {\n            return false;\n        }\n        const overlapping = this.isOverlapping();\n        if (overlapping) {\n            this.position.x = position ? position.x : Math.random() * container.canvas.size.width;\n            this.position.y = position ? position.y : Math.random() * container.canvas.size.height;\n            return this.checkOverlap(undefined, iterations + 1);\n        }\n        return true;\n    }\n    calcPosition(container, position) {\n        var _a, _b;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Utils_1.Utils.deepExtend({}, pluginPos);\n            }\n        }\n        const pos = {\n            x: (_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * container.canvas.size.width,\n            y: (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * container.canvas.size.height,\n        };\n        const outMode = this.particlesOptions.move.outMode;\n        if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceHorizontal)) {\n            if (pos.x > container.canvas.size.width - this.size.value * 2) {\n                pos.x -= this.size.value;\n            }\n            else if (pos.x < this.size.value * 2) {\n                pos.x += this.size.value;\n            }\n        }\n        if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceVertical)) {\n            if (pos.y > container.canvas.size.height - this.size.value * 2) {\n                pos.y -= this.size.value;\n            }\n            else if (pos.y < this.size.value * 2) {\n                pos.y += this.size.value;\n            }\n        }\n        return pos;\n    }\n    calculateVelocity() {\n        const baseVelocity = Utils_1.Utils.getParticleBaseVelocity(this);\n        const res = {\n            horizontal: 0,\n            vertical: 0,\n        };\n        const moveOptions = this.particlesOptions.move;\n        let rad;\n        let radOffset = Math.PI / 4;\n        if (typeof moveOptions.angle === \"number\") {\n            rad = (Math.PI / 180) * moveOptions.angle;\n        }\n        else {\n            rad = (Math.PI / 180) * moveOptions.angle.value;\n            radOffset = (Math.PI / 180) * moveOptions.angle.offset;\n        }\n        const range = {\n            left: Math.sin(radOffset + rad / 2) - Math.sin(radOffset - rad / 2),\n            right: Math.cos(radOffset + rad / 2) - Math.cos(radOffset - rad / 2),\n        };\n        if (moveOptions.straight) {\n            res.horizontal = baseVelocity.x;\n            res.vertical = baseVelocity.y;\n            if (moveOptions.random) {\n                res.horizontal += Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n                res.vertical += Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n            }\n        }\n        else {\n            res.horizontal = baseVelocity.x + Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n            res.vertical = baseVelocity.y + Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n        }\n        return res;\n    }\n    loadImageShape(container, drawer) {\n        var _a, _b, _c, _d;\n        if (!(this.shape === Enums_1.ShapeType.image || this.shape === Enums_1.ShapeType.images)) {\n            return;\n        }\n        const shape = this.particlesOptions.shape;\n        const imageDrawer = drawer;\n        const imagesOptions = shape.options[this.shape];\n        const images = imageDrawer.getImages(container).images;\n        const image = Utils_1.Utils.itemFromArray(images);\n        const optionsImage = (imagesOptions instanceof Array\n            ? imagesOptions.find((t) => t.src === image.source)\n            : imagesOptions);\n        const color = this.getFillColor();\n        let imageRes;\n        if ((image === null || image === void 0 ? void 0 : image.svgData) !== undefined && optionsImage.replaceColor && color) {\n            const svgColoredData = Utils_1.ColorUtils.replaceColorSvg(image, color, this.opacity.value);\n            const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" });\n            const domUrl = window.URL || window.webkitURL || window;\n            const url = domUrl.createObjectURL(svg);\n            const img = new Image();\n            imageRes = {\n                data: image,\n                loaded: false,\n                ratio: optionsImage.width / optionsImage.height,\n                replaceColor: (_a = optionsImage.replaceColor) !== null && _a !== void 0 ? _a : optionsImage.replace_color,\n                source: optionsImage.src,\n            };\n            img.addEventListener(\"load\", () => {\n                if (this.image) {\n                    this.image.loaded = true;\n                    image.element = img;\n                }\n                domUrl.revokeObjectURL(url);\n            });\n            img.addEventListener(\"error\", () => {\n                domUrl.revokeObjectURL(url);\n                Utils_1.Utils.loadImage(optionsImage.src).then((img2) => {\n                    if (this.image) {\n                        image.element = img2.element;\n                        this.image.loaded = true;\n                    }\n                });\n            });\n            img.src = url;\n        }\n        else {\n            imageRes = {\n                data: image,\n                loaded: true,\n                ratio: optionsImage.width / optionsImage.height,\n                replaceColor: (_b = optionsImage.replaceColor) !== null && _b !== void 0 ? _b : optionsImage.replace_color,\n                source: optionsImage.src,\n            };\n        }\n        if (!imageRes.ratio) {\n            imageRes.ratio = 1;\n        }\n        const fill = (_c = optionsImage.fill) !== null && _c !== void 0 ? _c : this.fill;\n        const close = (_d = optionsImage.close) !== null && _d !== void 0 ? _d : this.close;\n        return {\n            image: imageRes,\n            fill,\n            close,\n        };\n    }\n}\nexports.Particle = Particle;\n"},"lineCount":371}},"error":null,"hash":"ce71242cd3890e8adcd407a13946a302","cacheData":{"env":{}}}