{"id":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","dependencies":[{"name":"C:\\Users\\kiran\\Desktop\\classicsite\\package.json","includedInParent":true,"mtime":1596516263046},{"name":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\package.json","includedInParent":true,"mtime":1596516177586},{"name":"tslib","loc":{"line":4,"column":24},"parent":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\ShapeDrawers\\TextDrawer.js","resolved":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tslib\\tslib.es6.js"},{"name":"../Utils","loc":{"line":5,"column":24},"parent":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\ShapeDrawers\\TextDrawer.js","resolved":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Utils\\index.js"},{"name":"../Enums","loc":{"line":6,"column":24},"parent":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\ShapeDrawers\\TextDrawer.js","resolved":"C:\\Users\\kiran\\Desktop\\classicsite\\node_modules\\tsparticles\\dist\\Enums\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextDrawer = void 0;\nconst tslib_1 = require(\"tslib\");\nconst Utils_1 = require(\"../Utils\");\nconst Enums_1 = require(\"../Enums\");\nclass TextDrawer {\n    init(container) {\n        var _a;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const options = container.options;\n            if (Utils_1.Utils.isInArray(Enums_1.ShapeType.char, options.particles.shape.type) ||\n                Utils_1.Utils.isInArray(Enums_1.ShapeType.character, options.particles.shape.type)) {\n                const shapeOptions = ((_a = options.particles.shape.options[Enums_1.ShapeType.character]) !== null && _a !== void 0 ? _a : options.particles.shape.options[Enums_1.ShapeType.char]);\n                if (shapeOptions instanceof Array) {\n                    for (const character of shapeOptions) {\n                        yield Utils_1.Utils.loadFont(character);\n                    }\n                }\n                else {\n                    if (shapeOptions !== undefined) {\n                        yield Utils_1.Utils.loadFont(shapeOptions);\n                    }\n                }\n            }\n        });\n    }\n    draw(context, particle, radius) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text =\n                textData instanceof Array ? Utils_1.Utils.itemFromArray(textData, particle.randomIndexData) : textData;\n        }\n        const text = textParticle.text;\n        const style = character.style;\n        const weight = character.weight;\n        const size = Math.round(radius) * 2;\n        const font = character.font;\n        const fill = particle.fill;\n        const offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n    }\n}\nexports.TextDrawer = TextDrawer;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}}],"sources":{"node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextDrawer = void 0;\nconst tslib_1 = require(\"tslib\");\nconst Utils_1 = require(\"../Utils\");\nconst Enums_1 = require(\"../Enums\");\nclass TextDrawer {\n    init(container) {\n        var _a;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const options = container.options;\n            if (Utils_1.Utils.isInArray(Enums_1.ShapeType.char, options.particles.shape.type) ||\n                Utils_1.Utils.isInArray(Enums_1.ShapeType.character, options.particles.shape.type)) {\n                const shapeOptions = ((_a = options.particles.shape.options[Enums_1.ShapeType.character]) !== null && _a !== void 0 ? _a : options.particles.shape.options[Enums_1.ShapeType.char]);\n                if (shapeOptions instanceof Array) {\n                    for (const character of shapeOptions) {\n                        yield Utils_1.Utils.loadFont(character);\n                    }\n                }\n                else {\n                    if (shapeOptions !== undefined) {\n                        yield Utils_1.Utils.loadFont(shapeOptions);\n                    }\n                }\n            }\n        });\n    }\n    draw(context, particle, radius) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text =\n                textData instanceof Array ? Utils_1.Utils.itemFromArray(textData, particle.randomIndexData) : textData;\n        }\n        const text = textParticle.text;\n        const style = character.style;\n        const weight = character.weight;\n        const size = Math.round(radius) * 2;\n        const font = character.font;\n        const fill = particle.fill;\n        const offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n    }\n}\nexports.TextDrawer = TextDrawer;\n"},"lineCount":63}},"error":null,"hash":"9cd480a5d9698518f7a4e66827480693","cacheData":{"env":{}}}